##
TRSNet

Part of ICSHM2021 - UBSHM Team

Kareem Eltouny - keltouny@buffalo.edu
Seyedomid Sajedi - ssjaedi@buffalo.edu

University at Buffalo
##

Please make to install the packages provided in Anaconda_env/torch19.yml file (anaconda envrionemnt)

Every Task has three files. The three files have the same identifier for the task, the decoder, encoder, etc, but with different ending.
A regular file for training (ends with _cont.py), a file for testing on our test set (ends with _test.py), a file for producing Kaggle files (ends with _generate_kaggle_labels.py) 

Make sure that "hr_name" variable matches the checkpoint for testing and producing Kaggle files.

The weights files (.pt) in the release page can be used. Please refer to the following steps to use them:
1- Creat a "weights" directory in Task* folders (* depends on the weights model task, can be 1, 2, or 3).
2- In the "weights" directory, create an {hr_name} directory where {hr_name} is a variable that can be found on line 41 for Tasks 1 & 2, and line 51 for Task 3.
3- Copy the model weights file (*.pt) to the {hr_name} folder.
4- To continue training from a checkpooint, the *_cont.py files can be used. To test the model, use the *_test.py files.

Also, check these two lines to make sure the weights file match the one in "weights" folder
"""
checkpoint = torch.load(f'{weights_dir}/{hr_name}/{model_name}_loss_checkpoint.pt')
best_model.load_state_dict(checkpoint)
"""

If there are any bugs, please email keltouny@buffalo.edu or ssajedi@buffalo.edu

